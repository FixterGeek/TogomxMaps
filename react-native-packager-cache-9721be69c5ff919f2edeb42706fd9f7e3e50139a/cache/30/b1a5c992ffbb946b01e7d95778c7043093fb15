Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsxFileName = '/home/jose/Escritorio/TOGOMXFINAL/TogomxMaps/src/components/map/Map.js';

var _reactNative = require('react-native');

var _reactNativeMaps = require('react-native-maps');

var _reactNativeMaps2 = _interopRequireDefault(_reactNativeMaps);

var _reactRedux = require('react-redux');

var _listaActions = require('../../actions/listaActions');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _Cabecera = require('../comun/Cabecera');

var _Cabecera2 = _interopRequireDefault(_Cabecera);

var _Footer = require('../footer/Footer');

var _Footer2 = _interopRequireDefault(_Footer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Map: {
    displayName: 'Map'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/jose/Escritorio/TOGOMXFINAL/TogomxMaps/src/components/map/Map.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var SCREEN_HEIGHT = height;
var SCREEN_WIDTH = width;
var ASPECT_RADIO = width / height;
var LATITUDE_DELTA = 0.0150;
var LONGTITUDE_DELTA = LATITUDE_DELTA * ASPECT_RADIO;

var header = _reactNative.Platform.select({
  ios: _react3.default.createElement(_Cabecera2.default, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19
    }
  })
});

var Map = _wrapComponent('Map')(function (_Component) {
  _inherits(Map, _Component);

  function Map(props) {
    _classCallCheck(this, Map);

    var _this = _possibleConstructorReturn(this, (Map.__proto__ || Object.getPrototypeOf(Map)).call(this, props));

    _this.watchID = null;

    _this.state = {
      initialPosition: {
        latitude: 20.104989,
        longitude: -98.756323,
        longitudeDelta: 0.0043,
        latitudeDelta: 0.0034
      },
      markerPosition: {
        latitude: 0,
        longitude: 0
      }
    };
    return _this;
  }

  _createClass(Map, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      navigator.geolocation.getCurrentPosition(function (position) {
        var lat = parseFloat(position.coords.latitude);
        var long = parseFloat(position.coords.longitude);

        var initialRegion = {
          latitude: lat,
          longitude: long,
          latitudeDelta: LATITUDE_DELTA,
          longitudeDelta: LONGTITUDE_DELTA
        };

        _this2.setState({ initialPosition: initialRegion });
        _this2.setState({ markerPosition: initialRegion });
      }, function (error) {
        return console.log(error);
      }, {
        enableHighAccuracy: true,
        timeout: 200000,
        maximumAge: 10000
      });

      this.watchID = navigator.geolocation.watchPosition(function (position) {
        var lat = parseFloat(position.coords.latitude);
        var long = parseFloat(position.coords.longitude);

        var lastRegion = {
          latitude: lat,
          longitude: long,
          longitudeDelta: LONGTITUDE_DELTA,
          latitudeDelta: LATITUDE_DELTA
        };
        _this2.setState({ initialPosition: lastRegion });
        _this2.setState({ markerPosition: lastRegion });
        _this2.props.saveSelfPosition(lastRegion);
      });
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.props.listaFetch();
      this.props.notiFetch();
    }
  }, {
    key: 'render',
    value: function render() {
      console.log(this.props);
      var _props = this.props,
          lista = _props.lista,
          noti = _props.noti;

      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 90
          }
        },
        header,
        _react3.default.createElement(
          _reactNativeMaps2.default,
          {
            style: styles.container,
            provider: _reactNativeMaps2.default.PROVIDER_GOOGLE,
            region: this.state.initialPosition, __source: {
              fileName: _jsxFileName,
              lineNumber: 92
            }
          },
          _react3.default.createElement(
            _reactNativeMaps2.default.Marker,
            { coordinate: this.state.markerPosition, __source: {
                fileName: _jsxFileName,
                lineNumber: 96
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.radius, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 97
                }
              },
              _react3.default.createElement(_reactNative.View, { style: styles.marker, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 98
                }
              })
            )
          ),
          lista.map(function (lista, index) {
            var n = noti.find(function (noti) {
              return noti.tiendaId === lista.owner;
            });
            if (n === undefined) {
              n = { has: false };
            }
            if (n.has === true) {
              color = 'green';
            }
            if (n.has === false) {
              color = 'red';
            }
            return _react3.default.createElement(_reactNativeMaps2.default.Marker, { key: index, coordinate: lista.coord, pinColor: color, title: lista.title, __source: {
                fileName: _jsxFileName,
                lineNumber: 115
              }
            });
          })
        ),
        _react3.default.createElement(_Footer2.default, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 121
          }
        })
      );
    }
  }]);

  return Map;
}(_react2.Component));

var mapStateToProps = function mapStateToProps(state) {
  var lista = _lodash2.default.map(state.lista, function (val, uid) {
    return _extends({}, val, { uid: uid });
  });

  var noti = _lodash2.default.map(state.noti, function (val, uid) {
    return _extends({}, val, { uid: uid });
  });
  return { lista: lista, noti: noti };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, { listaFetch: _listaActions.listaFetch, notiFetch: _listaActions.notiFetch, saveSelfPosition: _listaActions.saveSelfPosition })(Map);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  radius: {
    height: 50,
    width: 50,
    borderRadius: 50 / 2,
    overflow: 'hidden',
    backgroundColor: 'rgba(0,112,255,0.1)',
    borderWidth: 1,
    borderColor: 'rgba(0,112,255,0.3)',
    alignItems: 'center',
    justifyContent: 'center'
  },
  marker: {
    height: 20,
    width: 20,
    overflow: 'hidden',
    backgroundColor: '#337ab7',
    borderWidth: 3,
    borderColor: 'white',
    borderRadius: 20 / 2
  }
});